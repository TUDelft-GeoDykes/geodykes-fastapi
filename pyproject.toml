[tool.poetry]
name = "fast-api-sqlalchemy-template"
version = "0"
description = "Async template on FastAPI and SQLAlchemy 2"
authors = ["Artur Shiriev <me@shiriev.ru>"]
license = "MIT License"


[tool.poetry.dependencies]
python = "^3.11"
pydantic-settings = "*"
granian = "*"
# database
alembic = "*"
psycopg2 = "*"
sqlalchemy = "*"
asyncpg = "*"
greenlet = "^3.0.3"
python-dotenv = "^1.0.1"
geodykes_model = {path = "./geodykes-pydantic-models", develop = true}
fastapi = "^0.111.0"

[tool.poetry.group.dev.dependencies]
httpx = "*"
pytest = "*"
pytest-cov = "*"
pytest-asyncio = "*"
ruff = "*"
mypy = "*"
asyncpg-stubs = "*"

[tool.ruff]
fix = true
unsafe-fixes = true
line-length = 120
target-version = "py311"
extend-exclude = ["bin"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D1", # allow missing docstrings
    "FBT", # allow boolean args
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls
    "INP", # ignore flake8-no-pep420
    "B008", # function-call-in-default-argument
    "ANN204", # no typings for __init__
    "RUF001", # allow cyrillic letters
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = [
    "S101", # allow asserts
]

[tool.ruff.lint.isort]
lines-after-imports = 2
no-lines-before = ["standard-library", "local-folder"]

[tool.mypy]
python_version = "3.11"
strict = true
pretty = true

[tool.pytest.ini_options]
addopts = "--cov=. --cov-report term-missing"
asyncio_mode = "auto"

[tool.coverage.report]
exclude_also = [
    "if typing.TYPE_CHECKING:",
]
[[pydantic-mypy]]
warn_required_dynamic_aliases = true
warn_untyped_fields = true
init_typed = true

